{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnl\\\\Documents\\\\Practical - Javascript\\\\react-complete-guide-course\\\\food-order-app\\\\01-starting-project\\\\src\\\\components\\\\Meals\\\\MealItem\\\\MealItemForm.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useContext } from 'react';\nimport Input from '../../UI/Input';\nimport classes from './MealItemForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MealItemForm = props => {\n  _s();\n  const [amountIsValid, setAmountIsValid] = useState(true);\n  const amountInputRef = useRef();\n  const addItem = useContext(CartContext).addItem;\n  const items = useContext(CartContext).items;\n  const submitHandler = event => {\n    event.preventDefault();\n    const enteredAmount = amountInputRef.current.value;\n    //+variable turrns variable to a number type\n    const enteredAmountNumber = +enteredAmount;\n\n    //setup conditionals for the enteredAmount since sometimes inputs might be wrong type\n    if (enteredAmountNumber > 5 || enteredAmountNumber < 1 || !enteredAmountNumber) {\n      setAmountIsValid(false);\n      return;\n    } else {\n      addItem(enteredAmountNumber);\n      setAmountIsValid(true);\n      console.log(items);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: amountInputRef,\n      label: \"Amount\",\n      input: {\n        id: 'amount_' + props.id,\n        type: 'number',\n        min: '1',\n        max: '5',\n        step: '1',\n        defaultValue: '1'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), !amountIsValid && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount (1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(MealItemForm, \"giCHrd1coUgtMVjDvOveXENhfmc=\");\n_c = MealItemForm;\nexport default MealItemForm;\nvar _c;\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"names":["React","useRef","useState","useContext","Input","classes","MealItemForm","props","amountIsValid","setAmountIsValid","amountInputRef","addItem","CartContext","items","submitHandler","event","preventDefault","enteredAmount","current","value","enteredAmountNumber","console","log","form","id","type","min","max","step","defaultValue"],"sources":["C:/Users/johnl/Documents/Practical - Javascript/react-complete-guide-course/food-order-app/01-starting-project/src/components/Meals/MealItem/MealItemForm.js"],"sourcesContent":["import React, { useRef, useState, useContext } from 'react';\r\nimport Input from '../../UI/Input';\r\nimport classes from './MealItemForm.module.css';\r\n\r\nconst MealItemForm = (props) => {\r\n  const [amountIsValid, setAmountIsValid] = useState(true);\r\n  const amountInputRef = useRef();\r\n  const addItem = useContext(CartContext).addItem;\r\n  const items = useContext(CartContext).items;\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const enteredAmount = amountInputRef.current.value;\r\n    //+variable turrns variable to a number type\r\n    const enteredAmountNumber = +enteredAmount;\r\n\r\n    //setup conditionals for the enteredAmount since sometimes inputs might be wrong type\r\n    if (\r\n      enteredAmountNumber > 5 ||\r\n      enteredAmountNumber < 1 ||\r\n      !enteredAmountNumber\r\n    ) {\r\n      setAmountIsValid(false);\r\n      return;\r\n    } else {\r\n      addItem(enteredAmountNumber);\r\n      setAmountIsValid(true);\r\n      console.log(items);\r\n    }\r\n  };\r\n  return (\r\n    <form className={classes.form} onSubmit={submitHandler}>\r\n      {/* with the spread op now we can highly config */}\r\n      <Input\r\n        ref={amountInputRef}\r\n        label='Amount'\r\n        input={{\r\n          id: 'amount_' + props.id,\r\n          type: 'number',\r\n          min: '1',\r\n          max: '5',\r\n          step: '1',\r\n          defaultValue: '1',\r\n        }}\r\n      />\r\n      <button type='submit'>+ Add</button>\r\n      {!amountIsValid && <p>Please enter a valid amount (1-5).</p>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default MealItemForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC3D,OAAOC,KAAK,MAAM,gBAAgB;AAClC,OAAOC,OAAO,MAAM,2BAA2B;AAAC;AAEhD,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAMQ,cAAc,GAAGT,MAAM,EAAE;EAC/B,MAAMU,OAAO,GAAGR,UAAU,CAACS,WAAW,CAAC,CAACD,OAAO;EAC/C,MAAME,KAAK,GAAGV,UAAU,CAACS,WAAW,CAAC,CAACC,KAAK;EAC3C,MAAMC,aAAa,GAAIC,KAAK,IAAK;IAC/BA,KAAK,CAACC,cAAc,EAAE;IAEtB,MAAMC,aAAa,GAAGP,cAAc,CAACQ,OAAO,CAACC,KAAK;IAClD;IACA,MAAMC,mBAAmB,GAAG,CAACH,aAAa;;IAE1C;IACA,IACEG,mBAAmB,GAAG,CAAC,IACvBA,mBAAmB,GAAG,CAAC,IACvB,CAACA,mBAAmB,EACpB;MACAX,gBAAgB,CAAC,KAAK,CAAC;MACvB;IACF,CAAC,MAAM;MACLE,OAAO,CAACS,mBAAmB,CAAC;MAC5BX,gBAAgB,CAAC,IAAI,CAAC;MACtBY,OAAO,CAACC,GAAG,CAACT,KAAK,CAAC;IACpB;EACF,CAAC;EACD,oBACE;IAAM,SAAS,EAAER,OAAO,CAACkB,IAAK;IAAC,QAAQ,EAAET,aAAc;IAAA,wBAErD,QAAC,KAAK;MACJ,GAAG,EAAEJ,cAAe;MACpB,KAAK,EAAC,QAAQ;MACd,KAAK,EAAE;QACLc,EAAE,EAAE,SAAS,GAAGjB,KAAK,CAACiB,EAAE;QACxBC,IAAI,EAAE,QAAQ;QACdC,GAAG,EAAE,GAAG;QACRC,GAAG,EAAE,GAAG;QACRC,IAAI,EAAE,GAAG;QACTC,YAAY,EAAE;MAChB;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF;MAAQ,IAAI,EAAC,QAAQ;MAAA,UAAC;IAAK;MAAA;MAAA;MAAA;IAAA,QAAS,EACnC,CAACrB,aAAa,iBAAI;MAAA,UAAG;IAAkC;MAAA;MAAA;MAAA;IAAA,QAAI;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAEX,CAAC;AAAC,GA7CIF,YAAY;AAAA,KAAZA,YAAY;AA+ClB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}