{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johnl\\\\Documents\\\\Practical - Javascript\\\\react-complete-guide-course\\\\food-order-app\\\\01-starting-project\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport React, { useReducer } from 'react';\nimport CartContext from './cart-context';\n\n//initial state for reducer\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n//why outside? since we are managing the complex state of cart(this state will be passed too many childrens to be using useState)\n//so we use useReducer\nconst cartReducer = (state, action) => {\n  if (action.type === 'ADD') {\n    //requirement\n    //1. target item in state\n    //2. increase the item number by add function by that amount\n    //3. then tarrget totalAmount and increase by that amount\n\n    //[FYI]Why we shouldn't use push for array? we want to return a new array, like an immutabele way\n    const updatedItems = state.items.concat(action.item);\n    console.log(action.item);\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\n\n//this component just make the state global so no other component need to use context again\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    //dispatch usually an object\n    dispatchCartAction({\n      type: 'ADD',\n      item: item\n    });\n  };\n  const removeItemCartHandler = id => {\n    dispatchCartAction({\n      type: 'REMOVE',\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","console","log","updatedTotalAmount","price","amount","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemCartHandler","id","cartContext","addItem","removeItem","children"],"sources":["C:/Users/johnl/Documents/Practical - Javascript/react-complete-guide-course/food-order-app/01-starting-project/src/store/CartProvider.js"],"sourcesContent":["import React, { useReducer } from 'react';\r\nimport CartContext from './cart-context';\r\n\r\n//initial state for reducer\r\nconst defaultCartState = {\r\n  items: [],\r\n  totalAmount: 0,\r\n};\r\n//why outside? since we are managing the complex state of cart(this state will be passed too many childrens to be using useState)\r\n//so we use useReducer\r\nconst cartReducer = (state, action) => {\r\n  if (action.type === 'ADD') {\r\n    //requirement\r\n    //1. target item in state\r\n    //2. increase the item number by add function by that amount\r\n    //3. then tarrget totalAmount and increase by that amount\r\n\r\n    //[FYI]Why we shouldn't use push for array? we want to return a new array, like an immutabele way\r\n    const updatedItems = state.items.concat(action.item);\r\n    console.log(action.item);\r\n    const updatedTotalAmount =\r\n      state.totalAmount + action.item.price * action.item.amount;\r\n    return { items: updatedItems, totalAmount: updatedTotalAmount };\r\n  }\r\n\r\n  return defaultCartState;\r\n};\r\n\r\n//this component just make the state global so no other component need to use context again\r\nconst CartProvider = (props) => {\r\n  const [cartState, dispatchCartAction] = useReducer(\r\n    cartReducer,\r\n    defaultCartState\r\n  );\r\n  const addItemToCartHandler = (item) => {\r\n    //dispatch usually an object\r\n    dispatchCartAction({ type: 'ADD', item: item });\r\n  };\r\n  const removeItemCartHandler = (id) => {\r\n    dispatchCartAction({ type: 'REMOVE', id: id });\r\n  };\r\n\r\n  const cartContext = {\r\n    items: cartState.items,\r\n    totalAmount: cartState.totalAmount,\r\n    addItem: addItemToCartHandler,\r\n    removeItem: removeItemCartHandler,\r\n  };\r\n  return (\r\n    <CartContext.Provider value={cartContext}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default CartProvider;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAOC,WAAW,MAAM,gBAAgB;;AAExC;AAAA;AACA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AACD;AACA;AACA,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB;IACA;IACA;IACA;;IAEA;IACA,MAAMC,YAAY,GAAGH,KAAK,CAACH,KAAK,CAACO,MAAM,CAACH,MAAM,CAACI,IAAI,CAAC;IACpDC,OAAO,CAACC,GAAG,CAACN,MAAM,CAACI,IAAI,CAAC;IACxB,MAAMG,kBAAkB,GACtBR,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACI,IAAI,CAACI,KAAK,GAAGR,MAAM,CAACI,IAAI,CAACK,MAAM;IAC5D,OAAO;MAAEb,KAAK,EAAEM,YAAY;MAAEL,WAAW,EAAEU;IAAmB,CAAC;EACjE;EAEA,OAAOZ,gBAAgB;AACzB,CAAC;;AAED;AACA,MAAMe,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGpB,UAAU,CAChDK,WAAW,EACXH,gBAAgB,CACjB;EACD,MAAMmB,oBAAoB,GAAIV,IAAI,IAAK;IACrC;IACAS,kBAAkB,CAAC;MAAEZ,IAAI,EAAE,KAAK;MAAEG,IAAI,EAAEA;IAAK,CAAC,CAAC;EACjD,CAAC;EACD,MAAMW,qBAAqB,GAAIC,EAAE,IAAK;IACpCH,kBAAkB,CAAC;MAAEZ,IAAI,EAAE,QAAQ;MAAEe,EAAE,EAAEA;IAAG,CAAC,CAAC;EAChD,CAAC;EAED,MAAMC,WAAW,GAAG;IAClBrB,KAAK,EAAEgB,SAAS,CAAChB,KAAK;IACtBC,WAAW,EAAEe,SAAS,CAACf,WAAW;IAClCqB,OAAO,EAAEJ,oBAAoB;IAC7BK,UAAU,EAAEJ;EACd,CAAC;EACD,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEE,WAAY;IAAA,UACtCN,KAAK,CAACS;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GAxBIV,YAAY;AAAA,KAAZA,YAAY;AA0BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}